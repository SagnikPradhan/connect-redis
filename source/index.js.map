{"version":3,"file":"index.js","sources":["index.ts"],"sourcesContent":["import type * as nodeRedis from \"redis\"\r\nimport type * as ioRedis from \"ioredis\"\r\n\r\nexport type Callback<D = undefined, E = Error> = (error?: E, data?: D) => void\r\n\r\n/** User's base session */\r\nexport interface IBaseSession {\r\n\t[index: string]: unknown\r\n\tcookie?: { expires?: Date }\r\n}\r\n\r\n/** Plugin base session store interface */\r\nexport interface IBaseSessionStore<Session extends IBaseSession> {\r\n\tget(sid: string, callback: Callback<Session | null, Error>): void\r\n\tset(sid: string, session: Session, callback?: Callback): void\r\n\tdestroy(sid: string, callback?: Callback): void\r\n\tall?(callback: Callback<{ [sid: string]: Session } | Session[] | null>): void\r\n\tlength?(callback: Callback<number>): void\r\n\tclear?(callback?: Callback): void\r\n\ttouch?(sid: string, session: Session, callback?: Callback): void\r\n}\r\n\r\n/** Plugin base session class */\r\nexport type BaseSessionStore<\r\n\tOptions extends Record<string, unknown>,\r\n\tSession extends IBaseSession\r\n> = abstract new (options?: Options) => IBaseSessionStore<Session>\r\n\r\ntype NodeRedis = nodeRedis.RedisClientType<any, any>\r\ntype IORedis = ioRedis.default | ioRedis.Cluster\r\nexport type RedisClient = NodeRedis | IORedis\r\n\r\nconst isNodeRedis = (client: RedisClient): client is NodeRedis =>\r\n\t\"SCAN\" in client\r\n\r\n/** Session serializer */\r\nexport interface Serializer<Session extends IBaseSession> {\r\n\tstringify(value: Session): string\r\n\tparse(value: string): Session\r\n}\r\n\r\n/** Redis store options */\r\nexport interface RedisStoreOptions<\r\n\tSession extends IBaseSession,\r\n\tBaseStoreOptions\r\n> {\r\n\t/** Redis client instance */\r\n\tclient: RedisClient\r\n\t/** Prefix for redis keys, uses `sess:` by default */\r\n\tprefix?: string\r\n\t/** Serializer, uses JSON by default */\r\n\tserializer?: Serializer<Session>\r\n\t/** Disable TTL */\r\n\tdisableTTL?: boolean\r\n\t/** TTL in seconds, default is 24 * 60 * 60 */\r\n\tttl?: number\r\n\t/** Disable touch */\r\n\tdisableTouch?: boolean\r\n\t/** Parent store instance options */\r\n\toptions?: BaseStoreOptions\r\n}\r\n\r\nexport function __attach<Value>(callback: Callback<Value>) {\r\n\treturn (promise: Promise<Value>) => {\r\n\t\tpromise\r\n\t\t\t.then((value) => callback(undefined, value))\r\n\t\t\t.catch((error) => callback(error))\r\n\t}\r\n}\r\n\r\nconst noop = () => {}\r\n\r\nexport type ConnectRedisOption<\r\n\tOptions extends Record<string, unknown>,\r\n\tSession extends IBaseSession\r\n> = {\r\n\tStore: BaseSessionStore<Options, Session>\r\n}\r\n\r\n/** Create redis store */\r\nexport function connectRedis<\r\n\tOptions extends Record<string, unknown>,\r\n\tSession extends IBaseSession\r\n>({ Store }: ConnectRedisOption<Options, Session>) {\r\n\treturn class RedisStore extends Store {\r\n\t\tprefix: string\r\n\t\tclient: RedisClient\r\n\t\tserializer: Serializer<Session>\r\n\t\tdisableTTL: boolean\r\n\t\tttl: number\r\n\t\tdisableTouch: boolean\r\n\r\n\t\tconstructor({\r\n\t\t\toptions,\r\n\t\t\tclient,\r\n\t\t\tprefix,\r\n\t\t\tserializer,\r\n\t\t\tdisableTTL,\r\n\t\t\tttl,\r\n\t\t\tdisableTouch,\r\n\t\t}: RedisStoreOptions<Session, Options>) {\r\n\t\t\tsuper(options)\r\n\r\n\t\t\tthis.client = client\r\n\t\t\tthis.prefix = typeof prefix === \"string\" ? prefix : \"sess:\"\r\n\t\t\tthis.serializer = serializer || JSON\r\n\t\t\tthis.disableTTL = disableTTL || false\r\n\t\t\tthis.ttl = ttl || 24 * 60 * 60\r\n\t\t\tthis.disableTouch = disableTouch || false\r\n\t\t}\r\n\r\n\t\tget(sid: string, callback: Callback<Session | null>) {\r\n\t\t\tconst main = async () => {\r\n\t\t\t\tconst key = `${this.prefix}${sid}`\r\n\t\t\t\tconst value = await this.__sendCommand<string | null>(\"GET\", key)\r\n\t\t\t\tif (value) return this.serializer.parse(value)\r\n\t\t\t\telse return null\r\n\t\t\t}\r\n\r\n\t\t\t__attach(callback)(main())\r\n\t\t}\r\n\r\n\t\tset(sid: string, session: Session, callback: Callback = noop) {\r\n\t\t\tconst main = async () => {\r\n\t\t\t\tconst key = `${this.prefix}${sid}`\r\n\t\t\t\tconst value = this.serializer.stringify(session)\r\n\r\n\t\t\t\tif (this.disableTTL) return this.__sendCommand(\"SET\", key, value)\r\n\r\n\t\t\t\t// Redis throws an error if negative TTL\r\n\t\t\t\tconst ttl = this.__getTTL(session)\r\n\t\t\t\tif (ttl < 0) return this.__sendCommand(\"DEL\", key)\r\n\r\n\t\t\t\treturn this.__sendCommand(\"SET\", key, value, \"EX\", ttl.toString())\r\n\t\t\t}\r\n\r\n\t\t\t__attach(callback)(main().then(() => undefined))\r\n\t\t}\r\n\r\n\t\tdestroy(sid: string, callback: Callback = noop) {\r\n\t\t\tconst key = `${this.prefix}${sid}`\r\n\t\t\t__attach(callback)(this.__sendCommand(\"DEL\", key).then(() => undefined))\r\n\t\t}\r\n\r\n\t\ttouch(sid: string, session: Session, callback: Callback = noop) {\r\n\t\t\tconst main = async () => {\r\n\t\t\t\tif (this.disableTTL || this.disableTouch) return undefined\r\n\t\t\t\tconst key = `${this.prefix}${sid}`\r\n\r\n\t\t\t\tawait this.__sendCommand(\r\n\t\t\t\t\t\"EXPIRE\",\r\n\t\t\t\t\tkey,\r\n\t\t\t\t\tthis.__getTTL(session).toString()\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\t__attach(callback)(main())\r\n\t\t}\r\n\r\n\t\tclear(callback: Callback = noop) {\r\n\t\t\t__attach(callback)(\r\n\t\t\t\tthis.__getAllKeys().then(\r\n\t\t\t\t\t(keys) => void this.__sendCommand(\"DEL\", ...keys)\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tlength(callback: Callback<number>) {\r\n\t\t\t__attach(callback)(this.__getAllKeys().then((value) => value.length))\r\n\t\t}\r\n\r\n\t\tids(callback: Callback<string[]>) {\r\n\t\t\t__attach(callback)(\r\n\t\t\t\tthis.__getAllKeys().then((keys) =>\r\n\t\t\t\t\tkeys.map((k) => k.slice(this.prefix.length))\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tall(callback: Callback<{ [k: string]: Session }>) {\r\n\t\t\tconst main = async () => {\r\n\t\t\t\tconst keys = await this.__getAllKeys()\r\n\r\n\t\t\t\tconst values = await this.__sendCommand<(string | null)[]>(\r\n\t\t\t\t\t\"MGET\",\r\n\t\t\t\t\t...keys\r\n\t\t\t\t)\r\n\r\n\t\t\t\treturn Object.fromEntries(\r\n\t\t\t\t\tkeys.map((key, idx) => {\r\n\t\t\t\t\t\tconst value = values[idx]!\r\n\r\n\t\t\t\t\t\treturn [\r\n\t\t\t\t\t\t\tkey.slice(this.prefix.length),\r\n\t\t\t\t\t\t\tthis.serializer.parse(value),\r\n\t\t\t\t\t\t] as const\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\t__attach(callback)(main())\r\n\t\t}\r\n\r\n\t\t__getTTL(session: Session) {\r\n\t\t\treturn session?.cookie?.expires\r\n\t\t\t\t? Math.ceil((Number(session.cookie.expires) - Date.now()) / 1000)\r\n\t\t\t\t: this.ttl\r\n\t\t}\r\n\r\n\t\t__getAllKeys() {\r\n\t\t\tconst escapedPrefix = this.prefix\r\n\t\t\t\t.replace(/\\\\/g, \"\\\\\\\\\")\r\n\t\t\t\t.replace(/\\*/g, \"\\\\*\")\r\n\t\t\t\t.replace(/\\?/g, \"\\\\?\")\r\n\t\t\t\t.replace(/\\[/g, \"\\\\[\")\r\n\t\t\t\t.replace(/\\]/g, \"\\\\]\")\r\n\t\t\t\t.replace(/\\{/g, \"\\\\{\")\r\n\t\t\t\t.replace(/\\}/g, \"\\\\}\")\r\n\t\t\t\t.replace(/\\)/g, \"\\\\)\")\r\n\t\t\t\t.replace(/\\(/g, \"\\\\(\")\r\n\t\t\t\t.replace(/\\!/g, \"\\\\!\")\r\n\r\n\t\t\tconst pattern = `${escapedPrefix}*`\r\n\r\n\t\t\treturn this.__scanKeys(0, pattern, 100)\r\n\t\t}\r\n\r\n\t\tasync __scanKeys(\r\n\t\t\tcursor: number,\r\n\t\t\tpattern: string,\r\n\t\t\tcount: number\r\n\t\t): Promise<string[]> {\r\n\t\t\tconst [nextCursor, keys] = await this.__sendCommand<[number, string[]]>(\r\n\t\t\t\t\"SCAN\",\r\n\t\t\t\tcursor.toString(),\r\n\t\t\t\t\"MATCH\",\r\n\t\t\t\tpattern,\r\n\t\t\t\t\"COUNT\",\r\n\t\t\t\tcount.toString()\r\n\t\t\t).then(([cursor, keys]) => [Number(cursor), keys.map(String)] as const)\r\n\r\n\t\t\treturn [\r\n\t\t\t\t...keys,\r\n\t\t\t\t...(nextCursor !== 0\r\n\t\t\t\t\t? await this.__scanKeys(nextCursor, pattern, count)\r\n\t\t\t\t\t: []),\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\t__sendCommand<Data>(...[cmd, ...args]: string[]) {\r\n\t\t\treturn new Promise<Data>((resolve) => {\r\n\t\t\t\tif (isNodeRedis(this.client))\r\n\t\t\t\t\tresolve(this.client.sendCommand([cmd, ...args], {}))\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst ioRedis = require(\"ioredis\") as typeof import(\"ioredis\")\r\n\t\t\t\t\tconst redisCommand = new ioRedis.Command(cmd, args)\r\n\t\t\t\t\tresolve(redisCommand.promise)\r\n\t\t\t\t\tthis.client.sendCommand(redisCommand)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n"],"names":["isNodeRedis","client","__attach","callback","promise","then","value","undefined","catch","error","noop","connectRedis","Store","RedisStore","prefix","serializer","disableTTL","ttl","disableTouch","constructor","options","JSON","get","sid","main","key","__sendCommand","parse","set","session","stringify","__getTTL","toString","destroy","touch","clear","__getAllKeys","keys","length","ids","map","k","slice","all","values","Object","fromEntries","idx","cookie","expires","Math","ceil","Number","Date","now","escapedPrefix","replace","pattern","__scanKeys","cursor","count","nextCursor","String","cmd","args","Promise","resolve","sendCommand","ioRedis","require","redisCommand","Command"],"mappings":"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"}